<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.telefonica.planfs</groupId>
	<artifactId>app_movil</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>App_Movil</name>
	<description>Telefonica Movistar Colombia Consulta Plan FS</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- dependency management and java version properties -->
		<java.version>11</java.version>
		<fuse.bom.version>7.11.0.fuse-sb2-7_11_0-00028-redhat-00001</fuse.bom.version>
		<camel.version>2.25.4</camel.version>
		<!-- functional dependencies version properties -->
		<bpr.common.version>1.0.0-SNAPSHOT</bpr.common.version>

		<!-- maven plugin version properties -->
		<dependency-check-maven.version>7.1.2</dependency-check-maven.version>
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>

		<project-sources.version>1.1</project-sources.version>
		<jkube.version>1.8.0</jkube.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>fuse-springboot-bom</artifactId>
				<version>${fuse.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- overwrite dependencies -->
		<dependency>
			<groupId>com.networknt</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>1.0.42</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.0-jre</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jsonpath-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-freemarker</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-json-validator</artifactId>
			<version>${camel.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.networknt</groupId>
					<artifactId>json-schema-validator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-swagger-java-starter</artifactId>
			<version>${camel.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.1.4</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>${maven-compiler-plugin.version}</version>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<inherited>true</inherited>
				<configuration>
					<argLine>${argLine} -DenableImageStreamDetection=true</argLine>
					<excludes>
						<exclude>**/*KT.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${fuse.bom.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${dependency-check-maven.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.commonjava.maven.plugins</groupId>
				<artifactId>project-sources-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>project-sources-archive</id>
						<phase>initialize</phase>
						<goals>
							<goal>archive</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>openshift-deployment</id>
			<properties>
				<jkube.build.strategy>docker</jkube.build.strategy>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jkube</groupId>
						<artifactId>kubernetes-maven-plugin</artifactId>
						<version>${jkube.version}</version>
						<configuration>
							<images>
								<image>
									<name>##image##</name>
									<build>
										<from>registry.redhat.io/openjdk/openjdk-11-rhel7:1.12-1.1661378019</from>
										<createImageOptions>
											<platform>(_shared_platform)</platform>
										</createImageOptions>
										<assembly>
											<mode>dir</mode>
											<targetDir>/deployments</targetDir>
											<inline>
												<fileSets>
													<fileSet>
														<directory>target</directory>
														<outputDirectory>.</outputDirectory>
														<includes>
															<include>*.jar</include>
														</includes>
													</fileSet>
												</fileSets>
											</inline>
										</assembly>
									</build>
								</image>
							</images>
							<helm>
								<chart> ${project.artifactId}</chart>
								<version> ${project.version} </version>
							</helm>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>popenshift-deployment</id>
			<properties>
				<jkube.build.strategy>docker</jkube.build.strategy>
				<jkube.s2i.imageStreamLookupPolicyLocal>false</jkube.s2i.imageStreamLookupPolicyLocal>
				<jkube.openshift.imageChangeTriggers>false</jkube.openshift.imageChangeTriggers>
				<jkube.generator.from>>registry.redhat.io/openjdk/openjdk-11-rhel7:1.12-1.1661378019</jkube.generator.from>
				<jkube.enricher.jkube-controller.replicaCount>1</jkube.enricher.jkube-controller.replicaCount>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jkube</groupId>
						<artifactId>openshift-maven-plugin</artifactId>
						<version>${jkube.version}</version>
						<configuration>
							<helm>
								<chart> ${project.artifactId}</chart>
								<version> ${project.version} </version>
							</helm>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>resource</goal>
									<goal>helm</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>